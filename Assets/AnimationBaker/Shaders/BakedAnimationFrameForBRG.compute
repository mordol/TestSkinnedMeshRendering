// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel AnimationFrameForBRG

struct AnimationProperties
{
    float clipIndex;
    float frame;
};

RWStructuredBuffer<AnimationProperties> _Properties;

struct ClipInfo
{
    float row;
    float count;
    float frameStep;
};

StructuredBuffer<ClipInfo> _ClipInfo;

float _TimeDelta;
int _ClipCount;

[numthreads(64,1,1)]
void AnimationFrameForBRG (uint3 id : SV_DispatchThreadID)
{
    int clipIndex = (int)_Properties[id.x].clipIndex % _ClipCount;
    float frame = _Properties[id.x].frame + _ClipInfo[clipIndex].frameStep * _TimeDelta;
    frame = frame - _ClipInfo[clipIndex].row;
    frame = frame % _ClipInfo[clipIndex].count;
    _Properties[id.x].frame = frame + _ClipInfo[clipIndex].row;
}
